# $(document).ready ->
#   #get audio context and create an analyser//
#   audioCtx = new ((window.AudioContext or window.webkitAudioContext))
#   analyser = audioCtx.createAnalyser()
#   #fast fourier transform size. the bigger the number, the more bars will appear.

#   analyser.fftSize = 512
#   bufferLength = analyser.frequencyBinCount
#   dataArray = new Uint8Array(bufferLength)
#   WIDTH = 360
#   HEIGHT = 100
#   #specify the canvas
#   canvas = document.querySelector('canvas')
#   canvasCtx = canvas.getContext('2d')
#   canvasCtx.clearRect 0, 0, WIDTH, HEIGHT
#   source = undefined
#   audio = $('#player')[0]
#   loadingIndicator = $('#loading')
#   manualSeek = false
#   loaded = 0
  
#   update = ->
#     requestAnimationFrame update
#     canvasCtx.save()
#     analyser.getByteFrequencyData dataArray
#     #canvasCtx.globalAlpha = 0.1;
#     canvasCtx.fillStyle = '#f8f8f8'
#     #canvasCtx.globalAlpha = 1;
#     canvasCtx.fillRect 0, 0, WIDTH, HEIGHT * 2
#     canvasCtx.restore()
#     barWidth = WIDTH / bufferLength * 2.5
#     barHeight = undefined
#     x = 0
#     i = 0
#     while i < bufferLength
#       barHeight = dataArray[i] / 1.4
#       canvasCtx.fillStyle = '#FF0000'
#       canvasCtx.fillRect x, HEIGHT * 2 - barHeight, barWidth, barHeight
#       canvasCtx.restore()
#       x += barWidth + 1
#       i++
#     return

#   # Hook up the audio routing...
#   # player -> analyser -> speakers
#   # (Do this after the player is ready to play - https://code.google.com/p/chromium/issues/detail?id=112368#c4)
#   $(audio).bind 'canplay', ->
#     try
#       rem = parseInt($(this).get(0).duration, 10)
#       mins = Math.floor(rem / 60, 10)
#       secs = rem - (mins * 60)
#       $('#time-total').text mins + ':' + (if secs > 9 then secs else '0' + secs)
#       source = audioCtx.createMediaElementSource(this)
#       source.connect analyser
#       analyser.connect audioCtx.destination
#     catch e
#       #do nothing
#       #console.log(e);
#     return
#   $(audio).bind 'timeupdate', ->
#     rem = parseInt(audio.currentTime, 10)
#     val = 100 / audio.duration * audio.currentTime
#     mins = Math.floor(rem / 60, 10)
#     secs = rem - (mins * 60)
#     # Update the slider value
#     $('#seek-bar').val val
#     $('#time-passed').text mins + ':' + (if secs > 9 then secs else '0' + secs)
#     return
#   # Kick it off...
#   # update();
#   # $('.grid').masonry({
#   #   itemSelector: '.music'
#   # });
#   # Event listener for the seek bar
#   $('#seek-bar').on 'change', ->
#     # Calculate the new time
#     time = audio.duration * $(this).val() / 100
#     # Update the audio time
#     console.log time
#     audio.currentTime = time
#     return
#   #when buttons are clicked
#   $('#play-button').click ->
#     if $(this).hasClass('glyphicon-pause')
#       #pause
#       audio.pause()
#     else
#       #play
#       audio.play()
#     $(this).toggleClass('glyphicon-pause').toggleClass 'glyphicon-play'
#     return
#   $('.music').click ->
#     $('#play-button').addClass('glyphicon-pause').removeClass 'glyphicon-play'
#     current_music = gon.music[$(this).attr('id')]
#     $('#player').show()
#     $('#currentsong').attr 'src', current_music.path
#     $('#music-title').html current_music.title
#     $('#music-artist').html current_music.artist
#     $('#music-album').html current_music.album
#     #update with new audio file
#     audio.pause()
#     audio.load()
#     audio.oncanplaythrough = audio.play()
#     $('#play-controls').fadeIn()
#     $('.album-img').hide()
#     $('.album-img').attr 'src', current_music.cover_image
#     $('.album-img').fadeIn()
#     $('.title-bg').hide()
#     #for some reason current_music.cover_image does not work?!? wtf
#     $('.title-bg').css 'background', 'url(' + $(this).find('img')[0].src + ')'
#     $('.title-bg').css 'background-repeat', 'no-repeat'
#     $('.title-bg').css 'background-position', 'center center'
#     $('.title-bg').css 'background-size', 'cover'
#     $('.title-bg').fadeIn()
#     return
#   return

# # ---
# # generated by js2coffee 2.1.0